library(servr)
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
?kabl
?kable
?rep
X1_2=c(rep(c("Y","N"),4))
X2_2=c(rep(c("Y","N"),each=3),"Y")
type_2=c(rep("A",5),rep("B",3))
(d_2=data.frame(cbind(X1_2,X2_2,type_2)))
X1_2=c(rep(c("Y","N"),4))
X2_2=c(rep(c("Y","N"),each=3),"Y","Y")
type_2=c(rep("A",5),rep("B",3))
(d_2=data.frame(cbind(X1_2,X2_2,type_2)))
table(X1_1,type_1)
table(X1_2,type_1)
X1_2=c(rep(c("Y","N"),4))
X2_2=c(rep(c("Y","N"),each=3),"Y","Y")
type_2=c(rep("A",5),rep("B",3))
(d_2=data.frame(cbind(X1_2,X2_2,type_2)))
table(X1_1,type_1)
table(X1_2,type_1)
X1_1=c(rep("Y",3),rep("N",2),rep("Y",1),rep("N",2))
X2_1=c(rep("Y",3),rep("N",2),rep("Y",2),rep("N",1))
type_1=c(rep("A",5),rep("B",3))
d_1=data.frame(cbind(X1_1,X2_1,type_1))
#library(knitr)
#kable(d_1)
table(X1_1,type_1)
table(X1_2,type_1)
X1_1=c(rep("Y",3),rep("N",2),rep("Y",1),rep("N",2))
X2_1=c(rep("Y",3),rep("N",2),rep("Y",2),rep("N",1))
type_1=c(rep("A",5),rep("B",3))
(d_1=data.frame(cbind(X1_1,X2_1,type_1)))
#library(knitr)
#kable(d_1)
table(X1_1,type_1)
table(X1_2,type_1)
X1_1=c(rep("Y",3),rep("N",2),rep("N",1),rep("Y",2))
X2_1=c(rep("Y",3),rep("N",2),rep("Y",2),rep("N",1))
type_1=c(rep("A",5),rep("B",3))
(d_1=data.frame(cbind(X1_1,X2_1,type_1)))
#library(knitr)
#kable(d_1)
table(X1_1,type_1)
table(X1_2,type_1)
X1_1=c(rep("Y",3),rep("N",2),rep("N",1),rep("Y",2))
X2_1=c(rep("Y",3),rep("N",2),rep("Y",2),rep("N",1))
type_1=c(rep("A",5),rep("B",3))
(d_1=data.frame(cbind(X1_1,X2_1,type_1)))
(m_1=naiveBayes(type_1 ~ ., data = d_1))
X1_2=c(rep(c("Y","N"),4))
X2_2=c(rep(c("Y","N"),each=3),"Y","Y")
type_2=c(rep("A",5),rep("B",3))
(d_2=data.frame(cbind(X1_2,X2_2,type_2)))
(m_2=naiveBayes(type_2 ~ ., data = d_2))
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
?cov
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
install.packages(mvtnorm)
install.packages("mvtnorm")
install.packages(mvtnorm)
library(mvtnorm)
m <- c(.5, -.5)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
data.grid <- expand.grid(s.1 = seq(-3, 3, length.out=200), s.2 = seq(-3, 3,   length.out=200))
q.samp <- cbind(data.grid, prob = mvtnorm::dmvnorm(data.grid, mean = m, sigma = sigma))
ggplot(q.samp, aes(x=s.1, y=s.2, z=prob)) +
geom_contour() +
coord_fixed(xlim = c(-3, 3), ylim = c(-3, 3), ratio = 1)
library(ggplot2)
ggplot(q.samp, aes(x=s.1, y=s.2, z=prob)) +
geom_contour() +
coord_fixed(xlim = c(-3, 3), ylim = c(-3, 3), ratio = 1)
m_1 <- c(.5, -.5)
m_2 <- c(1.3, 0.7)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
data.grid <- expand.grid(x_1 = seq(-3, 3, length.out=200), x_2 = seq(-3, 3,   length.out=200))
dat_1 <- cbind(data.grid,
prob = dmvnorm(data.grid, mean = m_1, sigma = sigma),
group= rep(1,200))
dat_2 <- cbind(data.grid,
prob = dmvnorm(data.grid, mean = m_2, sigma = sigma),
group= rep(2,200))
dat=rbind(dat_1,dat_2)
head(dat)
ggplot(dat, aes(x=x_1, y=x_2, z=prob, colour=group)) +
geom_contour() +
coord_fixed(xlim = c(-3, 3), ylim = c(-3, 3), ratio = 1)
tail(dat)
ggplot(dat, aes(x=x_1, y=x_2, z=prob)) +
geom_contour()
ggplot(dat, aes(x=x_1, y=x_2, z=prob)) +
stat_density2d()
ggplot(dat_1, aes(x=x_1, y=x_2, z=prob)) +
stat_density2d()
ggplot(dat, aes(x=x_1, y=x_2, z=prob)) +
geom_contour()
library(MASS)
bvn1 <- mvrnorm(N, mu = mu, Sigma = sigma ) # from MASS package
bvn1 <- mvrnorm(N, mu = m_1, Sigma = sigma ) # from MASS package
library(MASS)
bvn1 <- mvrnorm(200, mu = m_1, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("bvn1_X1","bvn1_X2")
head(bvn1)
ggplot(bvn1, aes(x=bvn1_X1, y=bvn1_X2)) +
stat_density2d(geom="density2d",
size=2,
contour=TRUE)
class(bvn1)
ggplot(data.frame(bvn1), aes(x=bvn1_X1, y=bvn1_X2)) +
stat_density2d(geom="density2d",
size=2,
contour=TRUE)
ggplot(data.frame(bvn1), aes(x=bvn1_X1, y=bvn1_X2)) +
stat_density2d(geom="density2d",
size=1,
contour=TRUE)
bvn1 <- mvrnorm(1000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(1000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
library(MASS)
bvn1 <- mvrnorm(1000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(1000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=data.frame(rbind(bvn1,bvn2))
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
dim(dat)
bvn1 <- mvrnorm(1000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(1000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
bvn1 <- mvrnorm(1000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(1000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1 <- mvrnorm(1000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(1000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1=data.frame(bvn1)
bvn2=data.frame(bvn2)
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=rbind(bvn1,bvn2)
head(dat)
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
m_1 <- c(.5, -.5)
m_2 <- c(-10, 0.7)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
bvn1 <- mvrnorm(2000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(2000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1=data.frame(bvn1)
bvn2=data.frame(bvn2)
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=rbind(bvn1,bvn2)
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
m_1 <- c(.5, -.5)
m_2 <- c(-5, 0.7)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
bvn1 <- mvrnorm(2000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(2000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1=data.frame(bvn1)
bvn2=data.frame(bvn2)
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=rbind(bvn1,bvn2)
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
m_1 <- c(.5, -.5)
m_2 <- c(-3, 0.7)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
bvn1 <- mvrnorm(2000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(2000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1=data.frame(bvn1)
bvn2=data.frame(bvn2)
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=rbind(bvn1,bvn2)
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
m_1 <- c(.5, -.5)
m_2 <- c(-1, 0.7)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
bvn1 <- mvrnorm(2000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(2000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1=data.frame(bvn1)
bvn2=data.frame(bvn2)
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=rbind(bvn1,bvn2)
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma <- matrix(c(1,.5,.5,1), nrow=2)
bvn1 <- mvrnorm(2000, mu = m_1, Sigma = sigma ) # from MASS package
bvn2 <- mvrnorm(2000, mu = m_2, Sigma = sigma ) # from MASS package
colnames(bvn1) <- c("X1","X2")
colnames(bvn2) <- c("X1","X2")
bvn1=data.frame(bvn1)
bvn2=data.frame(bvn2)
bvn1$group=rep("1",dim(bvn1)[1])
bvn2$group=rep("2",dim(bvn2)[1])
dat=rbind(bvn1,bvn2)
ggplot(dat, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("MASS")) install.packages("MASS")
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,.5,.5,1), nrow=2)
sigma_2 <- matrix(c(1,-0.7,-0.7,1), nrow=2)
set.seed=12345
bvm=function(m1,m2,sigma1,sigma2){
d1 <- mvrnorm(2000, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(2000, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
multiplot(p1, p2, cols=2)
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("MASS")) install.packages("MASS")
library(grid)
library(gridExtra)
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,.5,.5,1), nrow=2)
sigma_2 <- matrix(c(1,-0.7,-0.7,1), nrow=2)
set.seed=12345
bvm=function(m1,m2,sigma1,sigma2){
d1 <- mvrnorm(2000, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(2000, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
grid.arrange(p1, p2, ncol = 2, main = "Main title")
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,.5,.5,1), nrow=2)
sigma_2 <- matrix(c(1,-0.7,-0.7,1), nrow=2)
set.seed=12345
bvm=function(m1,m2,sigma1,sigma2){
d1 <- mvrnorm(2000, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(2000, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p1
p2
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,.5,.5,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
set.seed=12345
bvm=function(m1,m2,sigma1,sigma2){
d1 <- mvrnorm(2000, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(2000, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p2
p1
grid.arrange(p1, p2, ncol = 2)
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("MASS")) install.packages("MASS")
library(grid)
library(gridExtra)
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,.5,.5,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
set.seed=12345
bvm=function(m1,m2,sigma1,sigma2){
d1 <- mvrnorm(2000, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(2000, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)
grid.arrange(p1, p2, ncol = 2)
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("MASS")) install.packages("MASS")
if (!require("grid")) install.packages("grid")
if (!require("gridExtra")) install.packages("gridExtra")
m_1 <- c(.5, -.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,.5,.5,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
set.seed=12345
bvm=function(m1,m2,sigma1,sigma2){
# generate bivariate normal data
d1 <- mvrnorm(2000, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(2000, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)+
ggtitle("LDA assumption")
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2)$data, aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)+
ggtitle("QDA assumption")
grid.arrange(p1, p2, ncol = 2)
dd=bvm(m_1,m_2,sigma_1,sigma_1)$data
dd
head(dd)
dim(dd)
?Smarket
library(MASS)
View(Smarket)
m_1 <- c(1.1, -0.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,0.4,0.4,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
dd=bvm(m_1,m_2,sigma_1,sigma_1)$data
head(dd)
m_lda=lda(group~X1+X2, data=dd)
summary(m_lda)
m_lda
plot(m_lda)
plot(m_lda)
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
?sample
if (!require("MASS")) install.packages("MASS")
m_1 <- c(0.5, -0.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,0.5,0.5,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
dd_1=bvm(m_1,m_2,sigma_1,sigma_1,n1=1000,n2=1500)$data
ind_test=sample(1:dim(dd_1),100)
m_lda=lda(group~X1+X2, data=dd_1[-ind_test,])
m_lda
m_lda.pred=predict(m_lda,dd_1[ind_test,])
```{r message=FALSE, fig.width=8, fig.height=4}
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("MASS")) install.packages("MASS")
if (!require("grid")) install.packages("grid")
if (!require("gridExtra")) install.packages("gridExtra")
m_1 <- c(0.5, -0.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,0.5,0.5,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
set.seed=12345
# a function to generate bivariate normal data
bvm=function(m1,m2,sigma1,sigma2,n1,n2){
d1 <- mvrnorm(n1, mu = m1, Sigma = sigma1 )
d2 <- mvrnorm(n2, mu = m2, Sigma = sigma2 )
colnames(d1) <- c("X1","X2")
colnames(d2) <- c("X1","X2")
d1=data.frame(d1)
d2=data.frame(d2)
d1$group=rep("1",dim(d1)[1])
d2$group=rep("2",dim(d2)[1])
dd=rbind(d1,d2)
list(data = dd)
}
p1=ggplot(bvm(m_1,m_2,sigma_1,sigma_1,n1=2000,n2=2000)$data,
aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)+
ggtitle("LDA assumption")
p2=ggplot(bvm(m_1,m_2,sigma_1,sigma_2,n1=2000,n2=2000)$data,
aes(x=X1, y=X2)) +
stat_density2d(geom="density2d", aes(color = group),contour=TRUE)+
ggtitle("QDA assumption")
grid.arrange(p1, p2, ncol = 2)
```
if (!require("MASS")) install.packages("MASS")
m_1 <- c(0.5, -0.5)
m_2 <- c(-2, 0.7)
sigma_1 <- matrix(c(1,0.5,0.5,1), nrow=2)
sigma_2 <- matrix(c(0.8,-0.7,-0.7,0.8), nrow=2)
dd_1=bvm(m_1,m_2,sigma_1,sigma_1,n1=1000,n2=1500)$data
ind_test=sample(1:dim(dd_1),100)
m_lda=lda(group~X1+X2, data=dd_1[-ind_test,])
m_lda
dim(dd_1)
ind_test=sample(1:dim(dd_1)[1],100)
m_lda=lda(group~X1+X2, data=dd_1[-ind_test,])
m_lda
m_lda.pred=predict(m_lda,dd_1[ind_test,])
m_lda.pred
table(m_lda.pred$class, dd_1[ind_test,]$group)
table(pred=m_lda.pred$class, true=dd_1[ind_test,]$group)
table(true=dd_1[ind_test,]$group, pred=m_lda.pred$class)
dd_2=bvm(m_1,m_2,sigma_1,sigma_2,n1=1000,n2=1500)$data
m_qda=qda(group~X1+X2, data=dd_2)
m_qda
m_qda.pred=predict(m_qda,dd_2[ind_test,])
table(true=dd_2[ind_test,]$group, pred=m_qda.pred$class)
jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
library(readr)
data<- read_csv("/Users/chou/Google Drive/websites/github/myblog-master/data/HR_analytics.csv")
if(!require("data.table")) intall.pacakges("data.table")
libarary(data.table)
?read.csv
?fread
data<- fread("/Users/chou/Google Drive/websites/github/myblog-master/data/HR_analytics.csv",
sep=",")
head(data)
