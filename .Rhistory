fit = HoltWinters(dat_single)
fit_h = forecast.HoltWinters(fit, h=12)
par(mfrow = c(1, 2))
plot(fit)
plot.forecast(fit_h)
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=2*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
fit = HoltWinters(dat_single)
fit_h = forecast.HoltWinters(fit, h=12)
par(mfrow = c(1, 2))
plot(fit)
plot.forecast(fit_h)
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=3*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
fit = HoltWinters(dat_single)
fit_h = forecast.HoltWinters(fit, h=12)
par(mfrow = c(1, 2))
plot(fit)
plot.forecast(fit_h)
mean=100
set.seed(123)
res=rnorm(n=120, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=3*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
fit = HoltWinters(dat_single)
fit_h = forecast.HoltWinters(fit, h=12)
par(mfrow = c(1, 2))
plot(fit)
plot.forecast(fit_h)
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=4*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
fit = HoltWinters(dat_single)
fit_h = forecast.HoltWinters(fit, h=12)
par(mfrow = c(1, 2))
plot(fit)
plot.forecast(fit_h)
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=4*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
plot(stl(dat_sigle))
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=4*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
plot(stl(dat_single))
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=4*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
plot(stl(dat_single, s.window=”periodic”))
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
trend=0.2*c(1:240)+5
season=4*rep(c(0,1,2,3,2,1,0,-1,-2,-3,-2,-1),240/12)
myvector=mean+res+trend+season
dat_single = ts(myvector, start=c(2017, 1), frequency=12)
plot(stl(dat_single, s.window=12))
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
?stl
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
?acf
if(!require("forecast")) install.packages("forecast")
library(forecast)
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
myvector=mean+res
dat = ts(myvector, start=c(2017, 1), frequency=12)
fit = HoltWinters(dat, beta=FALSE, gamma=FALSE)
fit_h = forecast.HoltWinters(fit, h=10)
par(mfrow = c(1, 2))
plot(stl(dat, s.window=12), main="Single Exponential Smoothing")
plot(fit)
plot.forecast(fit_h)
names(fit)
?HoltWinters
fit$call
fit$fitted-fit$x
acf(fit$fitted-fit$x)
par(mfrow=c(1,1))
acf(fit$fitted-fit$x)
names(fit_h)
fit_h$residuals
acf(fit_h$residuals)
mean=100
set.seed(123)
res=rnorm(n=240, mean=0, sd=5)
myvector=mean+res
dat = ts(myvector, start=c(2017, 1), frequency=12)
fit = HoltWinters(dat, beta=FALSE, gamma=FALSE)
fit_h = forecast.HoltWinters(fit, h=10)
par(mfrow = c(1, 2))
plot(stl(dat, s.window=12), main="Single Exponential Smoothing")
plot(fit)
plot.forecast(fit_h)
par(mfrow=c(1,1))
acf(fit_h$residuals)
acf(fit_h$residuals)
acf(fit_h$residuals, lag.max=20)
names(fit_h)
fit_h$residuals
class(fit_h$residuals)
acf(fit_h$residuals)
pacf(fit_h$residuals)
is.na(fit_h$residuals)
sum(is.na(fit_h$residuals))
acf(fit_h$residuals, na.action = na.omit)
pacf(fit_h$residuals, na.action = na.omit)
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
get.wd()
getwd()
dat=read.csv("https://yintingchou.com/DATA/HR_analytics.csv",
header=TRUE)
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
m=matrix(c(1,0,0,2))
m
m=matrix(c(1,0,0,2),nrow=2,ncol=2)
m
a%*%m%*%a
a=c(2/3, 1/3)
m=matrix(c(1,0,0,2),nrow=2,ncol=2)
a%*%m%*%a
2/3
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
paste
?paste
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
if(!require("devtools")) install.packages("devtools")
if(!require("servr")) install.packages("servr")
if(!require("knitr")) install.packages("knitr")
library(servr)
#devtools::install_github("choux130/servr_2")
library(devtools)
#ls("package:servr")
#jekyll
#build_jekyll
#trace("jekyll",edit=TRUE)
#dev_mode()
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = TRUE,
command = "bundle exec jekyll build")
